// <auto-generated />
using System;
using ALMA_API.Models.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ALMA_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ALMA_API.Models.Db.Cow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BCS")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("DATE");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastCalving")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("LastInsemination")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("LazyCalculation")
                        .HasColumnType("DATE");

                    b.Property<double>("MeanProduction")
                        .HasColumnType("double");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.ToTable("Cow");
                });

            modelBuilder.Entity("ALMA_API.Models.Db.Farm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("Farm");
                });

            modelBuilder.Entity("ALMA_API.Models.Db.ManageProduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FarmId")
                        .IsUnique();

                    b.ToTable("ManageProduction");
                });

            modelBuilder.Entity("ALMA_API.Models.Db.Production", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("CowId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("double");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CowId");

                    b.ToTable("Production");
                });

            modelBuilder.Entity("ALMA_API.Models.Db.Stall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CowId")
                        .HasColumnType("int");

                    b.Property<int>("ManageProductionId")
                        .HasColumnType("int");

                    b.Property<bool>("Side")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CowId");

                    b.HasIndex("ManageProductionId");

                    b.ToTable("Stall");
                });

            modelBuilder.Entity("ALMA_API.Models.Db.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("ChangePassword")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("FarmId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ALMA_API.Models.Db.Cow", b =>
                {
                    b.HasOne("ALMA_API.Models.Db.Farm", "Farm")
                        .WithMany()
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("ALMA_API.Models.Db.ManageProduction", b =>
                {
                    b.HasOne("ALMA_API.Models.Db.Farm", "Farm")
                        .WithOne("ManageProduction")
                        .HasForeignKey("ALMA_API.Models.Db.ManageProduction", "FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("ALMA_API.Models.Db.Production", b =>
                {
                    b.HasOne("ALMA_API.Models.Db.Cow", "Cow")
                        .WithMany("Production")
                        .HasForeignKey("CowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cow");
                });

            modelBuilder.Entity("ALMA_API.Models.Db.Stall", b =>
                {
                    b.HasOne("ALMA_API.Models.Db.Cow", "Cow")
                        .WithMany()
                        .HasForeignKey("CowId");

                    b.HasOne("ALMA_API.Models.Db.ManageProduction", "ManageProduction")
                        .WithMany("Stalls")
                        .HasForeignKey("ManageProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cow");

                    b.Navigation("ManageProduction");
                });

            modelBuilder.Entity("ALMA_API.Models.Db.User", b =>
                {
                    b.HasOne("ALMA_API.Models.Db.Farm", "Farm")
                        .WithMany()
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("ALMA_API.Models.Db.Cow", b =>
                {
                    b.Navigation("Production");
                });

            modelBuilder.Entity("ALMA_API.Models.Db.Farm", b =>
                {
                    b.Navigation("ManageProduction")
                        .IsRequired();
                });

            modelBuilder.Entity("ALMA_API.Models.Db.ManageProduction", b =>
                {
                    b.Navigation("Stalls");
                });
#pragma warning restore 612, 618
        }
    }
}
